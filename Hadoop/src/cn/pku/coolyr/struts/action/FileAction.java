/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package cn.pku.coolyr.struts.action;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.text.DecimalFormat;
import java.util.HashMap;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.upload.FormFile;

import cn.pku.coolyr.service.FileService;
import cn.pku.coolyr.struts.form.FileForm;

/**
 * MyEclipse Struts Creation date: 12-27-2015
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/file" name="fileForm" parameter="flag" scope="request"
 *                validate="true"
 */
public class FileAction extends DispatchAction
{
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward fileUp(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response)
	{
		FileForm fileForm = (FileForm) form;// TODO Auto-generated method stub
		FormFile formFile = fileForm.getMyfile();// 取出文件
		// 通过FormFile 我们可以获取关于上传文件的各种信息
		String fileName = formFile.getFileName();
		String newFileName = "";

		// 截取最后的后缀名，再拼接上UUID号，形成新的文件名。
		// 该方法截取文件名的最后的后缀名，在拼接上UURD号形成新的文件名。
		// 文件名称：100.png
		// 新文件名称:450259ea-35a1-44a2-8df5-c864367bc07f.png
		// 文件大小：40878
		int beginIndex = fileName.lastIndexOf(".");
		String uuid = (java.util.UUID.randomUUID()).toString();
		if (beginIndex == -1)
			beginIndex = fileName.length();// 文件没有后缀名

		newFileName = uuid + fileName.substring(beginIndex, fileName.length());
		float fileSize = formFile.getFileSize();

		System.out.println("uuid：" + uuid);
		System.out.println("文件名称：" + fileName);
		System.out.println("新文件名称:" + newFileName);
		System.out.println("文件大小：" + fileSize / 1024 + "kb");

		InputStream is = null;
		OutputStream os = null;
		try
		{
			// 取出输入流
			is = formFile.getInputStream();

			// 得到输出流--文件
			// 得到file文件夹上传到tomcat服务器后的绝对路径
			String storeFilePath = this.getServlet().getServletContext().getRealPath("file");
			System.out.println("storeFilePath = " + storeFilePath);// 打印路径
			String newfilePath = storeFilePath + "\\" + newFileName;
			os = new FileOutputStream(newfilePath);// 保存到服务器的输出流

			int len = 0;// 每次读取的字节数
			byte[] bytes = new byte[1024];// 缓存
			// 循环处理
			while ((len = is.read(bytes)) > 0)
			{
				os.write(bytes, 0, len);
			}
			HashMap<String, Object> map = null;
			FileService fileService = new FileService();
			map = fileService.analysisFile(new File(newfilePath));
			HttpSession session = request.getSession();
			session.setAttribute("session_old_name", fileName);
			session.setAttribute("session_new_name", newFileName);
			session.setAttribute("session_line_num", map.get("lineNum"));
			session.setAttribute("session_column_num", map.get("columnNum"));
			session.setAttribute("session_contentList", map.get("contentList"));
			if (fileSize < 1024)
			{
				session.setAttribute("session_file_size", fileSize + " B");
			}
			else if (fileSize < 1024 * 1024)
			{
				DecimalFormat decimalFormat = new DecimalFormat("0.00");// 构造方法的字符格式这里如果小数不足2位,会以0补足.
				String fileSizeString = decimalFormat.format(fileSize / 1024);// format返回的是字符串
				session.setAttribute("session_file_size", fileSizeString + " KB");

			}
			else
			{
				DecimalFormat decimalFormat = new DecimalFormat("0.00");// 构造方法的字符格式这里如果小数不足2位,会以0补足.
				String fileSizeString = decimalFormat.format(fileSize / (1024 * 1024));// format返回的是字符串
				session.setAttribute("session_file_size", fileSizeString + " MB");
			}
			
			// request.setAttribute("request_old_name", fileName);
			// request.setAttribute("request_new_name", newFileName);
			// request.setAttribute("request_line_num", map.get("lineNum"));
			// request.setAttribute("request_column_num", map.get("columnNum"));
			// request.setAttribute("request_file_size", fileSizeString +
			// " KB");
			return mapping.findForward("file_up_ok");
		}
		catch (FileNotFoundException e)
		{
			e.printStackTrace();

		}
		catch (IOException e)
		{
			e.printStackTrace();
		}
		finally
		{
			try
			{
				is.close();
				os.close(); 
			}
			catch (IOException e)
			{
				e.printStackTrace();
			}
			formFile.destroy();
		}
		return mapping.findForward("file_up_err");
	}
}